package ok.ks.tempura;

import android.content.Context;
import android.content.Intent;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.provider.Settings;
import android.util.Log;
import android.widget.Toast;

public class MyLocationManager implements LocationListener {

    private Context _Context;
    public LocationManager _LocationManager;
    public Location _Location = new Location("");
    private MyLocationManagerListener _MyLocationManagerListener;
    
    public MyLocationManager(Context context) {
        if (MyData.DEBUG) Log.i("MyLocationManager", "start to get LocationManager");
        _Context = context;
        try
        {
            _LocationManager = (LocationManager) _Context.getSystemService(Context.LOCATION_SERVICE);
            final boolean gpsEnabled = _LocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
            if (!gpsEnabled)
            {
                Toast.makeText(_Context, "Temperature sensor is not equipped. Then GPS to be available.", Toast.LENGTH_LONG).show();
                enableLocationSettings();
                return;
            }

            if (MyData.DEBUG) Log.i("MyLocationManager", "_LocationManager success");
        }
        catch (Exception ex)
        {
            Log.e("MyLocationManager", ex.getMessage());
        }
    }

    /**
     * Eventリスナーを設定
     * 
     * @param listener
     */
    public void setEventListener(MyLocationManagerListener listener) {
        this._MyLocationManagerListener = listener;
    }
    
    private void enableLocationSettings() {
        Intent settingsIntent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        _Context.startActivity(settingsIntent);
        ((MainActivity)_Context).finish();
    }
    
    /**
     * ロケーションの更新
     */
    public void RequestLocationUpdates()
    {
        if (MyData.DEBUG) Log.i("RequestLocationUpdates", "start to get requestLocationUpdates");
        if (_LocationManager != null)
        {
            // 最新の位置情報を取得
            _Location = _LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
            // 10秒ごとに通知
            _LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);

            if (MyData.DEBUG) Log.i("RequestLocationUpdates", "requestLocationUpdates success");
        }
    }
    
    public void destroy()
    {
        // 重要：requestLocationUpdatesしたままアプリを終了すると挙動がおかしくなる。
        _LocationManager.removeUpdates(this);
//        _LocationManager.removeGpsStatusListener(this);
    }

    @Override
    public void onLocationChanged(Location location) {
        // TODO 自動生成されたメソッド・スタブ
        _MyLocationManagerListener.UpdatedLocation(location);
    }

    @Override
    public void onProviderDisabled(String provider) {
        // TODO 自動生成されたメソッド・スタブ
        
    }

    @Override
    public void onProviderEnabled(String provider) {
        // TODO 自動生成されたメソッド・スタブ
        
    }

    @Override
    public void onStatusChanged(String provider, int status, Bundle extras) {
        // TODO 自動生成されたメソッド・スタブ
        
    }
}
